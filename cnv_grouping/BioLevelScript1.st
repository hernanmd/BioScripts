Object subclass: #BioRecCompleter	instanceVariableNames: 'records completeRecords'	classVariableNames: ''	poolDictionaries: ''	category: 'BioLevelScript1'!!BioRecCompleter commentStamp: 'HernanMoralesDurand 11/28/2017 11:20' prior: 0!BioRecCompleter new 	buildMissingRecords;	writeCompleteRecords. - message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	records:		<Object>    Implementation Points!!BioRecCompleter methodsFor: 'accessing' stamp: 'HernanMoralesDurand 11/27/2017 16:03'!completeRecords: anObject	completeRecords := anObject! !!BioRecCompleter methodsFor: 'accessing' stamp: 'HernanMoralesDurand 11/28/2017 11:52'!writeCompleteRecords	'all_records.csv' asFileReference writeStreamDo: [ : writeStream |		self halt.		(self completeRecords asSortedCollection: [ : a : b |			a chr < b chr and: [ a case < b case ] ]) do: [ : record |				(NeoCSVWriter on: writeStream)					separator: Character tab;					addRawFields: #(case chr length n media);					nextPut: record;					flush 		] ]! !!BioRecCompleter methodsFor: 'accessing' stamp: 'HernanMoralesDurand 11/27/2017 15:52'!records	^ records! !!BioRecCompleter methodsFor: 'accessing' stamp: 'HernanMoralesDurand 11/27/2017 15:47'!buildMissingLengths: lengthsCollection case: caseString chr: chrString	" #('1--2' '2--4')"	^ (#('1--2' '2--4' '4--8' '8--16' '16--') difference: lengthsCollection )		collect: [ : l | self newEmptyRecordLength: l case: caseString chr: chrString ]! !!BioRecCompleter methodsFor: 'accessing' stamp: 'HernanMoralesDurand 11/27/2017 15:52'!records: anObject	records := anObject! !!BioRecCompleter methodsFor: 'accessing' stamp: 'HernanMoralesDurand 11/27/2017 16:03'!completeRecords	^ completeRecords		ifNil: [ completeRecords := OrderedCollection new: 5000 ]! !!BioRecCompleter methodsFor: 'accessing' stamp: 'HernanMoralesDurand 11/28/2017 13:09'!buildMissingRecords	(self records groupedBy: #case) do: [ : recArray |		| recByChr missings |		(recArray allSatisfy: #isValid)			ifTrue: [ 				(recByChr := recArray groupedBy: #chr) do: [ : rec |					missings := self 						buildMissingLengths: (rec collect: #length) 						case: rec anyOne case 						chr: rec anyOne chr.					self assert: [ (rec size + missings size) = 5 ].					self completeRecords 						addAll: rec;						addAll: missings ] ] ]! !!BioRecCompleter methodsFor: 'accessing' stamp: 'HernanMoralesDurand 11/27/2017 15:51'!newEmptyRecordLength: l case: caseString chr: chrString	^ BioRecordObj1 new		case: caseString;		chr: chrString;		length: l;		n: 0;		media: 0;		yourself! !!BioRecCompleter methodsFor: 'accessing' stamp: 'HernanMoralesDurand 11/27/2017 15:53'!initialize	self records: ('c:\SmalltalkImages\BioSmalltalk61\Datos.txt' asFileReference readStreamDo: [ : readStream 	|		(NeoCSVReader on: readStream) 			skipHeader;			separator: Character tab;			recordClass: BioRecordObj1;			addField: #case:; 			addField: #chr:;			addField: #length:;			addIntegerField: #n:;			addIntegerField: #media:;			upToEnd ]).! !Object subclass: #BioRecordObj1	instanceVariableNames: 'case chr length n media'	classVariableNames: ''	poolDictionaries: ''	category: 'BioLevelScript1'!!BioRecordObj1 methodsFor: 'accessing' stamp: 'HernanMoralesDurand 11/27/2017 13:58'!case: anObject	case := anObject! !!BioRecordObj1 methodsFor: 'accessing' stamp: 'HernanMoralesDurand 11/27/2017 13:58'!case	^ case! !!BioRecordObj1 methodsFor: 'accessing' stamp: 'HernanMoralesDurand 11/27/2017 13:58'!n	^ n! !!BioRecordObj1 methodsFor: 'accessing' stamp: 'HernanMoralesDurand 11/27/2017 13:58'!length: anObject	length := anObject! !!BioRecordObj1 methodsFor: 'accessing' stamp: 'HernanMoralesDurand 11/27/2017 13:58'!chr: anObject	chr := anObject! !!BioRecordObj1 methodsFor: 'accessing' stamp: 'HernanMoralesDurand 11/27/2017 13:58'!media	^ media! !!BioRecordObj1 methodsFor: 'accessing' stamp: 'HernanMoralesDurand 11/27/2017 13:58'!length	^ length! !!BioRecordObj1 methodsFor: 'accessing' stamp: 'HernanMoralesDurand 11/27/2017 13:58'!n: anObject	n := anObject! !!BioRecordObj1 methodsFor: 'accessing' stamp: 'HernanMoralesDurand 11/27/2017 13:58'!media: anObject	media := anObject! !!BioRecordObj1 methodsFor: 'accessing' stamp: 'HernanMoralesDurand 11/27/2017 13:58'!chr	^ chr! !!BioRecordObj1 methodsFor: 'printing' stamp: 'HernanMoralesDurand 11/27/2017 16:05'!printOn: aStream	aStream 		nextPutAll: self case asString;		space;		nextPutAll: self chr asString;		space;		nextPutAll: self length asString.		! !!BioRecordObj1 methodsFor: 'testing' stamp: 'HernanMoralesDurand 11/27/2017 16:07'!isValid	^ self case notNil! !!BioRecordObj1 methodsFor: 'comparing' stamp: 'HernanMoralesDurand 11/27/2017 16:24'!= aBioRecordObj1	self case = aBioRecordObj1 case		ifFalse: [ ^ false ].	self chr = aBioRecordObj1 chr		ifFalse: [ ^ false ].	self length = aBioRecordObj1 length 		ifFalse: [ ^ false ].	self n = aBioRecordObj1 n		ifFalse: [ ^ false ].	self media = aBioRecordObj1 media 		ifFalse: [ ^ false ].	^ true! !!BioRecordObj1 methodsFor: 'comparing' stamp: 'HernanMoralesDurand 11/27/2017 16:26'!< aBioRecordObj1	^ self case < aBioRecordObj1 case and: [ self chr < aBioRecordObj1 chr and: [ self length < aBioRecordObj1 length ] ]! !!BioRecordObj1 methodsFor: 'comparing' stamp: 'HernanMoralesDurand 11/27/2017 16:27'!<= aBioRecordObj1	^ self case <= aBioRecordObj1 case and: [ self chr <= aBioRecordObj1 chr and: [ self length <= aBioRecordObj1 length ] ]! !